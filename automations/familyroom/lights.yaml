- alias: "Family room: lights"
  id: 8b53f10d-df56-421e-9e89-08cb39f16c7d
  trigger:
    - platform: homeassistant
      event: start

    - platform: event
      event_type:
        - automation_reloaded
        - scene_reloaded

    - platform: state
      entity_id:
        - input_boolean.house_mode_bright_inside

    - platform: time
      at:
        - input_datetime.time_goodmorning
        - input_datetime.time_goodnight

    - platform: state
      entity_id:
        - sensor.family_room_remote_action
      id: remote

    - platform: state
      id: senile
      entity_id:
        - binary_sensor.motion_familyroom_occupancy
      from: "on"
      to: "off"
      for:
        minutes: "{{ states('input_number.family_room_timeout')|int }}"

  action:
    choose:
      - conditions:
          - condition: trigger
            id: remote
        sequence:
          - variables:
              action: "{{ trigger.to_state.state }}"

          - choose:
              - conditions: "{{ action in ['on'] }}"
                sequence:
                  - service: light.toggle
                    data:
                      entity_id:
                        - light.family_room_ceiling

      - conditions:
          # when no movement is detected for a fair amount of time, consider the room empty and that 'someone' forgot to turn off the lights
          - condition: trigger
            id: senile
        sequence:
          # turn off all lights
          - service: light.turn_off
            entity_id:
              - light.family_room_ceiling

      - conditions:
          - condition: state
            # when there is daylight
            entity_id:
              - input_boolean.house_mode_bright_inside
            state: "on"

        sequence:
          - &turn_off # turn off lights
            service: light.turn_off
            target:
              entity_id:
                - light.family_room_window_1
                - light.mushroom_lamp
            data:
              transition: 5

      - conditions:
          - condition: or
            conditions:
              - condition: and
                # turn on lights if
                conditions:
                  - condition: time
                    # at specific time in the morning
                    after: input_datetime.time_goodmorning
                    # but before a specific time in the evening
                    before: input_datetime.time_goodnight

        sequence:
          - &scene_turn_on
            service: scene.turn_on
            target:
              entity_id:
                - scene.family_room_ambience_lights_cozy
                - scene.family_room_window_lights_cozy
            data:
              transition: 5

    default:
      - *turn_off
